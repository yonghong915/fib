<?xml version="1.0" encoding="UTF-8" ?>
<message-bean-mapping id="BEPS_121MappingOut" source-type="message-bean" target-type="map">
	<mapping type="value" to="serviceId">receiveBatchPaymentOrder</mapping>
	<mapping type="value" to="batchType">commTICIn</mapping>
	<mapping type="value" to="extendMap.requestOrResponse">response</mapping> 
	<mapping type="value" to="communicationEventTypeId">MESSAGE_IN_COMM</mapping>
	<mapping type="value-mapping" from="MsgHeader.MesgType" to="contentMimeTypeId"></mapping><!-- 报文类型代码 例如：beps.008.001.01-->
	<mapping type="value" to="prodCatalogId">BEPS</mapping><!--接收系统号-->
	<!-- 报文头 begin -->
	<mapping type="value-mapping" from="MsgHeader.BeginFlag" to="BeginFlag"></mapping><!-- 开始标识 -->
	<mapping type="value-mapping" from="MsgHeader.VersionID" to="VersionID" ></mapping><!--版本 -->
	<mapping type="value-mapping" from="MsgHeader.OrigSender" to="extendMap.origSender"></mapping><!--报文发起人 -->
	<mapping type="value-mapping" from="MsgHeader.OrigSenderSID" to="extendMap.origSenderSID"></mapping><!--发送系统号 -->
	<mapping type="value-mapping" from="MsgHeader.OrigReceiver" to="extendMap.origReceiver"></mapping><!--报文接收人 -->
	<mapping type="value-mapping" from="MsgHeader.OrigReceiverSID" to="extendMap.origReceiverSID"></mapping><!--接收系统号 -->
	<mapping type="value-mapping" from="MsgHeader.OrigSendDate" to="extendMap.origSendDate"></mapping><!--报文发起日期 -->
	<mapping type="value-mapping" from="MsgHeader.OrigSendTime" to="OrigSendTime"></mapping><!--报文发起时间-->
	<mapping type="value-mapping" from="MsgHeader.StructType" to="StructType"></mapping><!-- 格式类型 -->
	<mapping type="value-mapping" from="MsgHeader.MesgType" to="messageTypeId"></mapping><!-- 报文类型代码 -->
	<mapping type="value-mapping" from="MsgHeader.MesgType" to="contentMimeTypeId"></mapping><!-- 报文类型代码 -->
	<mapping type="value-mapping" from="MsgHeader.MesgID" to="extendMap.mesgID"></mapping><!-- 通信级标识号 -->
	<mapping type="value-mapping" from="MsgHeader.MesgRefID" to="extendMap.mesgRefID"></mapping>
	<mapping type="value-mapping" from="MsgHeader.MesgPriority" to="MesgPriority"></mapping>
	<mapping type="value-mapping" from="MsgHeader.MesgDirection" to="MesgDirection"></mapping>
    <mapping type="value-mapping" from="MsgHeader.Reserve" to="Reserve"></mapping>
	<mapping type="value-mapping" from="MsgHeader.EndFlag" to="EndFlag"></mapping><!-- 结束标识 -->
    <!-- 报文头 end-->


	<!-- 报文体内容 -->
	<!-- 批量报文组头 -->
	<mapping type="value-mapping" from="BEPS_121_Out.PKGGrpHdr.MessageIdentification" to="messageIdentification"></mapping><!-- 报文标识号 -->
	<mapping type="value-mapping" from="BEPS_121_Out.PKGGrpHdr.CreationDateTime" to="CreationDateTime"></mapping><!-- 报文发送时间，需要自己写脚本new出个时间 -->
	<mapping type="value-mapping" from="BEPS_121_Out.PKGGrpHdr.InstructingDirectParty" to="instructingParty"></mapping><!-- 发起直接参与机构 -->
	<mapping type="value-mapping" from="BEPS_121_Out.PKGGrpHdr.InstructedDirectParty" to="instructedParty"></mapping><!-- 接收直接参与机构 -->
	<mapping type="value-mapping" from="BEPS_121_Out.PKGGrpHdr.NumberOfTransactions" to="itemNumber"></mapping><!-- 明细业务总笔数 -->
	<mapping type="value-mapping" from="BEPS_121_Out.PKGGrpHdr.CurrencyType" to="CurrencyType"></mapping><!-- 币种 -->
	<mapping type="value-mapping" from="BEPS_121_Out.PKGGrpHdr.ControlSum" to="itemTotal"></mapping><!-- 明细业务总金额 -->
	<mapping type="value-mapping" from="BEPS_121_Out.PKGGrpHdr.SystemCode" to="systemCode"></mapping>
	<mapping type="value-mapping" from="BEPS_121_Out.PKGGrpHdr.Remark" to="Remark"></mapping><!-- 备注postscript？？ -->

	<!-- NPC信息组件，这个由NPC填写，非必输的组件 -->
	<mapping type="value-mapping" from="BEPS_121_Out.NPCPrcInf.ProcessStatus" to="processStatus" />
	<mapping type="value-mapping" from="BEPS_121_Out.NPCPrcInf.ProcessCode" to="ProcessCode" /><!-- 处理码 -->
	<mapping type="value-mapping" from="BEPS_121_Out.NPCPrcInf.RejectInformation" to="RejectInformation" /><!-- 拒绝信息 -->
	<mapping type="value-mapping" from="BEPS_121_Out.NPCPrcInf.NettingDate" to="nettingDate" /><!-- 轧差日期 -->
	<mapping type="value-mapping" from="BEPS_121_Out.NPCPrcInf.NettingRound" to="nettingRound" /><!-- 轧差场次 -->
	<mapping type="value-mapping" from="BEPS_121_Out.NPCPrcInf.SettlementDate" to="settlementDate" /><!-- 清算日期 -->
	<mapping type="value-mapping" from="BEPS_121_Out.NPCPrcInf.ReceiveTime" to="ReceiveTime" />
	<mapping type="value-mapping" from="BEPS_121_Out.NPCPrcInf.TransmitTime" to="TransmitTime" />


	<!-- 报文正文其他信息 -->

	<mapping type="value-mapping" from="BEPS_121_Out.ccti[].TransactionIdentification" to="orderList[].transactionIdentification" /><!-- 明细标识号 -->
	<mapping type="value-mapping" from="BEPS_121_Out.ccti[].Name" to="orderList[].draweeAccName" /><!-- 付款人名称 -->
	<mapping type="value-mapping" from="BEPS_121_Out.ccti[].AddressLine" to="orderList[].draweeAddress"></mapping><!-- 付款人地址 -->
	<mapping type="value-mapping" from="BEPS_121_Out.ccti[].Identification" to="orderList[].draweeAccNo" /><!-- 付款人账号 -->
	<mapping type="value-mapping" from="BEPS_121_Out.ccti[].Issuer" to="orderList[].draweeBankCode" /><!-- 付款人开户行行号 -->
	<mapping type="value-mapping" from="BEPS_121_Out.ccti[].Identification2" to="orderList[].paymentBankCode" /><!-- 付款行行号 -->
	<mapping type="value-mapping" from="BEPS_121_Out.ccti[].Identification3" to="orderList[].gatheringBankCode" /><!-- 收款行行号 -->
	<mapping type="value-mapping" from="BEPS_121_Out.ccti[].Name2" to="orderList[].payeeAccName" /><!-- 收款人名称-->
	<mapping type="value-mapping" from="BEPS_121_Out.ccti[].AddressLine2" to="orderList[].payeeAddress" /><!-- 收款人地址 -->
	<mapping type="value-mapping" from="BEPS_121_Out.ccti[].Identification4" to="orderList[].payeeAccNo" /><!-- 收款人账号 -->
	<mapping type="value-mapping" from="BEPS_121_Out.ccti[].Issuer2" to="orderList[].payeeBankCode" /><!-- 收款人开户行行号 -->
	<mapping type="value-mapping" from="BEPS_121_Out.ccti[].CurrencyType" to="orderList[].currencyCategory"></mapping>
	<mapping type="value-mapping" from="BEPS_121_Out.ccti[].Amount" to="orderList[].transactionSum"></mapping>
	<mapping type="value-mapping" from="BEPS_121_Out.ccti[].Proprietary" to="orderList[].operationType">
		target.put("categoryPurpose",currentValue);
		return currentValue;
	</mapping><!-- 业务类型编码 -->
	<mapping type="value-mapping" from="BEPS_121_Out.ccti[].Proprietary2" to="orderList[].operationCategory"/><!-- 业务种类编码 -->
	<mapping type="value-mapping" from="BEPS_121_Out.ccti[].AdditionalInformation" to="orderList[].postscript" /><!-- 附言summary -->
	<!--验签结果-->
	<mapping type="value-mapping" from="checkEscortFlag" to="checkEscortFlag"/> <!--核押验签结果 -->


<manual-mapping>
	<![CDATA[
		import java.util.Map;
		import java.util.ArrayList;
		import java.util.List;
		import java.util.HashMap;
	    import java.util.Date;
	    import java.text.SimpleDateFormat;
		import com.giantstone.util.AmountUtil;
		import com.giantstone.common.util.CodeUtil;
		import com.giantstone.cnaps2.messagebean.recv.req.*;
		List orderList = (List)target.get("orderList");
		for(int i = 0;i<orderList.size();i++){
			Map bean = (Map)orderList.get(i);
			String flag = bean.get("operationType");
			List products = new ArrayList();
			Map product = new HashMap();
			Map answers = new HashMap();
			if("A105".equals(flag)){
				//退汇业务
				BEPS_121_OutCcti outCcti = (BEPS_121_OutCcti)sourceBean.BEPS_121_Out.getCctiAt(i);
				BEPS_ServiceElement121_A105 se = (BEPS_ServiceElement121_A105)outCcti.getCustomerCreditTransfer();
				answers.put("originalMessageIdentification",se.getOrgnlGrpHdr().getOriginalMessageIdentification());
				answers.put("originalInstructingParty",se.getOrgnlGrpHdr().getOriginalInstructingParty());
				answers.put("originalMessageType",se.getOrgnlGrpHdr().getOriginalMessageType());
				answers.put("instructingIndirectParty",se.getOrgnlTx().getInstructingIndirectParty());
				answers.put("instructedIndirectParty",se.getOrgnlTx().getInstructedIndirectParty());
				answers.put("originalTransactionIdentification",se.getOrgnlTx().getOriginalTransactionIdentification());
				answers.put("originalTransactionTypeCode",se.getOrgnlTx().getOriginalTransactionTypeCode());
				answers.put("content",se.getContent());
				product.put("answers",answers);
				products.add(product);
				bean.put("products",products);
				bean.put("postscript",se.getContent());//将退汇原因放入客户附言中

			}else if ("A109".equals(flag)){
				//委托收款划回
				BEPS_121_OutCcti outCcti = (BEPS_121_OutCcti)sourceBean.BEPS_121_Out.getCctiAt(i);
				BEPS_ServiceElement121_A109 se = (BEPS_ServiceElement121_A109)outCcti.getCustomerCreditTransfer();
				answers.put("billViseType",se.getType());
				String date = (String)se.getDate();
					if(date != null && !"".equals(date)){
						SimpleDateFormat sdf1 = new SimpleDateFormat("yyyy-MM-dd");
						Date dd = sdf1.parse(date);
						SimpleDateFormat sdf2 = new SimpleDateFormat("yyyyMMdd");	 
						String billViseDate = sdf2.format(dd);
						answers.put("billViseDate",billViseDate);
					}
				answers.put("billViseNo",se.getNumber());
				answers.put("billNo",se.getNumber());
				product.put("answers",answers);
				products.add(product);
				bean.put("products",products);
			}else if ("A110".equals(flag)){
				//托收承付划回
				BEPS_121_OutCcti outCcti = (BEPS_121_OutCcti)sourceBean.BEPS_121_Out.getCctiAt(i);
				BEPS_ServiceElement121_A110 se = (BEPS_ServiceElement121_A110)outCcti.getCustomerCreditTransfer();
				String date = (String)se.getDate();
				if(date != null && !"".equals(date)){
						SimpleDateFormat sdf1 = new SimpleDateFormat("yyyy-MM-dd");
						Date dd = sdf1.parse(date);
						SimpleDateFormat sdf2 = new SimpleDateFormat("yyyyMMdd");	 
						String billViseDate = sdf2.format(dd);
						answers.put("billViseDate",billViseDate);
					}
				answers.put("billViseNo",se.getNumber());
				answers.put("billNo",se.getNumber());
				String compensatedAmount = se.getAmendsAmount();
				if(compensatedAmount != null && !"".equals(compensatedAmount)){
					if(compensatedAmount.contains("CNY")){
						compensatedAmount = compensatedAmount.substring(3);
					}
				}
				answers.put("compensatedAmount",compensatedAmount);
				String repudiatedAmount = se.getRejectAmount();
				if(repudiatedAmount != null && !"".equals(repudiatedAmount)){
					if(repudiatedAmount.contains("CNY")){
						repudiatedAmount = repudiatedAmount.substring(3);
					}
				}
				answers.put("repudiatedAmount",repudiatedAmount);
				String oldTrustSum = se.getOriginalAmount();
				if(oldTrustSum != null && !"".equals(oldTrustSum)){
					if(oldTrustSum.contains("CNY")){
						oldTrustSum = oldTrustSum.substring(3);
					}
				}
				String transactionAmount = se.getPaymentAmount();
				if(transactionAmount != null && !"".equals(transactionAmount)){
					if(transactionAmount.contains("CNY")){
						transactionAmount = transactionAmount.substring(3);
					}
				}
                answers.put("oldTrustSum",transactionAmount);
				String extraAmount = se.getOddAmount();
				if(extraAmount != null && !"".equals(extraAmount)){
					if(extraAmount.contains("CNY")){
						extraAmount = extraAmount.substring(3);
					}
				}
				answers.put("extraAmount",extraAmount);
				product.put("answers",answers);
				products.add(product);
				bean.put("products",products);
			}else if ("A111".equals(flag)){
				//商业汇票业务
				BEPS_121_OutCcti outCcti = (BEPS_121_OutCcti)sourceBean.BEPS_121_Out.getCctiAt(i);
				BEPS_ServiceElement121_A111 se = (BEPS_ServiceElement121_A111)outCcti.getCustomerCreditTransfer();
				String date = (String)se.getIssueDate();
				if(date != null && !"".equals(date)){
						SimpleDateFormat sdf1 = new SimpleDateFormat("yyyy-MM-dd");
						Date dd = sdf1.parse(date);
						SimpleDateFormat sdf2 = new SimpleDateFormat("yyyyMMdd");	 
						String billViseDate = sdf2.format(dd);
						answers.put("billViseDate",billViseDate);
					}
				
				//modify by zoufj 20130424 将金额CNY2.12类似去掉CNY
				String parAmount = se.getDraftAmount();
				if(parAmount != null && !"".equals(parAmount)){
					if(parAmount.contains("CNY")){
						parAmount = parAmount.substring(3);
					}
				}
				answers.put("parAmount",parAmount);
				answers.put("applicantAccNo",se.getApplyAccount());
				answers.put("applicantAccName",se.getApplyName());
				String actuallySettleSum = se.getSettlementAmount();
				if(actuallySettleSum != null && !"".equals(actuallySettleSum)){
					if(parAmount.contains("CNY")){
						actuallySettleSum = actuallySettleSum.substring(3);
					}
				}
				answers.put("actuallySettleSum",actuallySettleSum);
				String marginSum = se.getOddAmount();
				if(marginSum != null && !"".equals(marginSum)){
					if(marginSum.contains("CNY")){
						marginSum = marginSum.substring(3);
					}
				}
				answers.put("marginSum",marginSum);
				product.put("answers",answers);
				products.add(product);
				bean.put("products",products);
			}else if ("A201".equals(flag)){
				//支票
				BEPS_121_OutCcti outCcti = (BEPS_121_OutCcti)sourceBean.BEPS_121_Out.getCctiAt(i);
				BEPS_ServiceElement121_A201 se = (BEPS_ServiceElement121_A201)outCcti.getCustomerCreditTransfer();
				String date = (String)se.getIssueDate();
				if(date != null && !"".equals(date)){
						SimpleDateFormat sdf1 = new SimpleDateFormat("yyyy-MM-dd");
						Date dd = sdf1.parse(date);
						SimpleDateFormat sdf2 = new SimpleDateFormat("yyyyMMdd");	 
						String billViseDate = sdf2.format(dd);
						answers.put("billViseDate",billViseDate);
					}
				answers.put("billViserName",se.getDrawerName());
				String parAmount = se.getChequeAmount();
				if(parAmount != null && !"".equals(parAmount)){
					if(parAmount.contains("CNY")){
						parAmount = parAmount.substring(3);
					}
				}
				answers.put("parAmount",parAmount);
				answers.put("cashExchangeRate",se.getAmount());		
				answers.put("billSheets",se.getNumber());
				product.put("answers",answers);
				products.add(product);
				bean.put("products",products);
			}else if ("A203".equals(flag)){
				//支票
				BEPS_121_OutCcti outCcti = (BEPS_121_OutCcti)sourceBean.BEPS_121_Out.getCctiAt(i);
				BEPS_ServiceElement121_A203 se = (BEPS_ServiceElement121_A203)outCcti.getCustomerCreditTransfer();
				String date = (String)se.getIssueDate();//出票日期
				if(date != null && !"".equals(date)){
						SimpleDateFormat sdf1 = new SimpleDateFormat("yyyy-MM-dd");
						Date dd = sdf1.parse(date);
						SimpleDateFormat sdf2 = new SimpleDateFormat("yyyyMMdd");	 
						String billViseDate = sdf2.format(dd);
						answers.put("billViseDate",billViseDate);
					}
				String parAmount = se.getDraftAmount();//出票金额
				if(parAmount != null && !"".equals(parAmount)){
					if(parAmount.contains("CNY")){
						parAmount = parAmount.substring(3);
					}
				}
				answers.put("parAmount",parAmount);//出票金额
				answers.put("applicantAccNo",se.getApplyAccount());//申请人账号
				answers.put("applicantAccName",se.getApplyName());//申请人名称
				String actuallySettleSum = se.getSettlementAmount();//实际结算金额
				if(actuallySettleSum != null && !"".equals(actuallySettleSum)){
					if(actuallySettleSum.contains("CNY")){
						actuallySettleSum = actuallySettleSum.substring(3);
					}
				}
				answers.put("actuallySettleSum",actuallySettleSum);//实际结算金额
				String marginSum = se.getOddAmount();//多余金额
				if(marginSum != null && !"".equals(marginSum)){
					if(marginSum.contains("CNY")){
						marginSum = marginSum.substring(3);
					}
				}
				answers.put("marginSum",marginSum);//多余金额
				answers.put("driftType",se.getDraftType());	//汇票种类
				product.put("answers",answers);
				products.add(product);
				bean.put("products",products);
			} else if ("A204".equals(flag)){
				//银行本票
				BEPS_121_OutCcti outCcti = (BEPS_121_OutCcti)sourceBean.BEPS_121_Out.getCctiAt(i);
				BEPS_ServiceElement121_A204 se = (BEPS_ServiceElement121_A204)outCcti.getCustomerCreditTransfer();
				String date = (String)se.getIssueDate();//出票日期
				if(date != null && !"".equals(date)){
						SimpleDateFormat sdf1 = new SimpleDateFormat("yyyy-MM-dd");
						Date dd = sdf1.parse(date);
						SimpleDateFormat sdf2 = new SimpleDateFormat("yyyyMMdd");	 
						String billViseDate = sdf2.format(dd);
						answers.put("billViseDate",billViseDate);
					}
				String parAmount = se.getDraftAmount();//出票金额
				if(parAmount != null && !"".equals(parAmount)){
					if(parAmount.contains("CNY")){
						parAmount = parAmount.substring(3);
					}
				}
				answers.put("parAmount",parAmount);//出票金额
				answers.put("applicantAccNo",se.getApplyAccount());//申请人账号
				answers.put("applicantAccName",se.getApplyName());//申请人名称
				String actuallySettleSum = se.getSettlementAmount();//实际结算金额
				if(actuallySettleSum != null && !"".equals(actuallySettleSum)){
					if(actuallySettleSum.contains("CNY")){
						actuallySettleSum = actuallySettleSum.substring(3);
					}
				}
				answers.put("actuallySettleSum",actuallySettleSum);//实际结算金额
				String marginSum = se.getOddAmount();//多余金额
				if(marginSum != null && !"".equals(marginSum)){
					if(marginSum.contains("CNY")){
						marginSum = marginSum.substring(3);
					}
				}
				answers.put("marginSum",marginSum);//多余金额
				answers.put("billCategory",se.getDraftType());	//本票种类
				product.put("answers",answers);
				products.add(product);
				bean.put("products",products);
			}
		target.put("orderList",orderList);
		}
	]]>
	</manual-mapping>
</message-bean-mapping>