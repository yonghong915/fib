<?xml version="1.0" encoding="UTF-8" ?>
<message-bean-mapping id="BEPS_125MappingOut" source-type="message-bean" target-type="map">
	<mapping type="value" to="serviceId">receiveBatchPaymentOrder</mapping>
	<mapping type="value" to="batchType">sueBAPIn</mapping>
	<mapping type="value" to="communicationEventTypeId">MESSAGE_IN_COMM</mapping>
	<mapping type="value-mapping" from="MsgHeader.MesgType" to="contentMimeTypeId"></mapping><!-- 报文类型代码 例如：beps.008.001.01-->
	<mapping type="value" to="prodCatalogId">BEPS</mapping><!--接收系统号-->	
		<!--验签结果-->
	<mapping type="value-mapping" from="checkEscortFlag" to="checkEscortFlag"/> <!--核押验签结果 -->
 <!-- 报文头 begin -->
	<mapping type="value-mapping" from="MsgHeader.BeginFlag" to="BeginFlag"></mapping><!-- 开始标识 -->
	<mapping type="value-mapping" from="MsgHeader.VersionID" to="VersionID" ></mapping><!--版本 -->
	<mapping type="value-mapping" from="MsgHeader.OrigSender" to="extendMap.origSender"></mapping><!--报文发起人 -->
	<mapping type="value-mapping" from="MsgHeader.OrigSender" to="instructingParty"></mapping><!--发起直接参与机构 -->
	<mapping type="value-mapping" from="MsgHeader.OrigSenderSID" to="extendMap.origSenderSID"></mapping><!--发送系统号 -->
	<mapping type="value-mapping" from="MsgHeader.OrigReceiver" to="extendMap.origReceiver"></mapping><!--报文接收人 -->
	<mapping type="value-mapping" from="MsgHeader.OrigReceiver" to="instructedParty"></mapping><!--接收直接参与机构 -->
	<mapping type="value-mapping" from="MsgHeader.OrigReceiverSID" to="extendMap.origReceiverSID"></mapping><!--接收系统号 -->
	<mapping type="value-mapping" from="MsgHeader.OrigSendDate" to="extendMap.origSendDate"></mapping><!--报文发起日期 -->
	<mapping type="value-mapping" from="MsgHeader.OrigSendTime" to="OrigSendTime"></mapping><!--报文发起时间-->
	<mapping type="value-mapping" from="MsgHeader.StructType" to="StructType"></mapping><!-- 格式类型 -->
	<mapping type="value-mapping" from="MsgHeader.MesgType" to="messageTypeId"></mapping><!-- 报文类型代码 -->
	<mapping type="value-mapping" from="MsgHeader.MesgType" to="contentMimeTypeId"></mapping><!-- 990用：原来账报文的报文类型 -->
	<mapping type="value-mapping" from="MsgHeader.MesgID" to="extendMap.mesgID"></mapping><!-- 通信级标识号 -->
	<mapping type="value-mapping" from="MsgHeader.MesgRefID" to="extendMap.mesgRefID"></mapping>
	<mapping type="value-mapping" from="MsgHeader.MesgPriority" to="MesgPriority"></mapping>
	<mapping type="value-mapping" from="MsgHeader.MesgDirection" to="MesgDirection"></mapping>
    <mapping type="value-mapping" from="MsgHeader.Reserve" to="Reserve"></mapping>
	<mapping type="value-mapping" from="MsgHeader.EndFlag" to="EndFlag"></mapping><!-- 结束标识 -->

    <!-- 报文头 end-->

	<!-- 报文体内容 -->
	<!-- 报文正文其他信息 -->

	<mapping type="value-mapping" from="BEPS_125_Out.MessageIdentification" to="messageIdentification"/><!-- 报文标识号 -->
	<mapping type="value-mapping" from="BEPS_125_Out.CreationDateTime" to="CreationDateTime"/><!-- 报文发送时间 -->
	<mapping type="value-mapping" from="BEPS_125_Out.NumberOfTransactions" to="itemNumber"></mapping><!-- 明细业务总笔数 -->
	<mapping type="value-mapping" from="BEPS_125_Out.ControlSum" to="itemTotal"/><!-- 明细业务总金额-->
	<mapping type="value-mapping" from="BEPS_125_Out.SettlementMethod" to="SettlementMethod"></mapping><!-- SettlementMethod -->
	<mapping type="value-mapping" from="BEPS_125_Out.Proprietary" to="categoryPurpose"/><!-- 业务类型编码 -->

	<mapping type="script" to="orderList">
    <![CDATA[
			import java.util.Map;
			import java.util.ArrayList;
			import java.util.List;
			import java.util.HashMap;
			import com.giantstone.cnaps2.messagebean.recv.req.BEPS_125_OutCcti;
			import com.giantstone.cnaps2.messagebean.recv.req.BEPS_125_Out;
			import com.giantstone.cnaps2.messagebean.recv.req.BEPS_125_OutCctiBeps;
			BEPS_125_Out beps123Out = sourceBean.BEPS_125_Out;

			List ccti = beps123Out.getCcti();

			List orderList = new ArrayList();
			// NPC处理信息
			List npcList = ccti.get(0).getBeps();

			for(BEPS_125_OutCctiBeps beps : npcList) {
				String value = beps.getUstrd();
				if(value.contains("F61")) {
					//NPC处理状态
					target.put("processStatus",value.substring(5, value.length()));
				} else if(value.contains("C01")){
					//NPC轧差日期
					target.put("nettingDate",value.substring(5, value.length()));
				} else if(value.contains("E05")){
					//NPC轧差场次
					target.put("nettingRound",value.substring(5, value.length()));
				} else if(value.contains("C00")){
					//NPC清算日期/终态日期
					target.put("settlementDate",value.substring(5, value.length()));
				}
			}

			for(int i=0;i<ccti.size();i++){

				BEPS_125_OutCcti beps125 = (BEPS_125_OutCcti)ccti.get(i);
				Map map = new HashMap();
				map.put("endToEndIdentification",beps125.getEndToEndIdentification());//端到端标识号
				map.put("transactionIdentification",beps125.getTransactionIdentification());//明细标识号
				map.put("clearingSystemReference",beps125.getClearingSystemReference());//明细业务参考号
				map.put("currencyCategory",beps125.getCurrencyType());//币种
				map.put("transactionSum",beps125.getInterbankSettlementAmount());//货币符号、结算金额
				map.put("launchLiquidationBankNo",beps125.getMemberIdentification());//付款清算行行号
				map.put("paymentBankCode",beps125.getIdentification());//付款行行号
				map.put("receiveLiquidationBankNo",beps125.getMemberIdentification2());//收款清算行行号
				map.put("gatheringBankCode",beps125.getIdentification2());//收款行行号
				map.put("draweeAccName",beps125.getName());//付款人名称
				map.put("draweeAddress",beps125.getAddressLine());//付款人地址
				map.put("draweeAccNo",beps125.getIdentification3());//付款人账号
				map.put("draweeBankCode",beps125.getMemberIdentification3());//付款人开户行行号
				map.put("draweeBankName",beps125.getName2());//付款人开户行名称
				map.put("payeeBankCode",beps125.getMemberIdentification4());//收款人开户行行号
				map.put("payeeBankName",beps125.getName3());//收款人开户行名称
				map.put("payeeAccName",beps125.getName4());//收款人名称
				map.put("payeeAddress",beps125.getAddressLine2());//收款人地址
				map.put("payeeAccNo",beps125.getIdentification4());//收款人账号
				map.put("operationCategory",beps125.getProprietary2());//业务种类编码

				List npcList = beps125.getBeps();
				for(BEPS_125_OutCctiBeps beps : npcList) {
					String value = beps.getUstrd();
					if(value.contains("H01")) {
						//附言
						map.put("postscript",value.substring(5, value.length()));
					} else if(value.contains("H02")){
						//附言2
						map.put("Unstructured2",value.substring(5, value.length()));
					}
				}
				orderList.add(map);
			}
			return orderList;
	]]>
	</mapping><!-- 明细集合 -->



  </message-bean-mapping>
