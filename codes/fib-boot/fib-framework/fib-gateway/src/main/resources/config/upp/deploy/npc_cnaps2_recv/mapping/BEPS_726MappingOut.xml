<?xml version="1.0" encoding="UTF-8" ?>
<message-bean-mapping id="BEPS_726MappingOut" source-type="message-bean" target-type="map" >
	<!--验签结果-->
	<mapping type="value-mapping" from="checkEscortFlag" to="checkEscortFlag"/> <!--核押验签结果 -->
	<!-- 报文头 begin -->
	<mapping type="value-mapping" from="MsgHeader.BeginFlag" to="extendMap.beginFlag"></mapping><!-- 开始标识 -->
	<mapping type="value-mapping" from="MsgHeader.VersionID" to="extendMap.versionID"></mapping><!-- 版本号 -->
	<mapping type="value-mapping" from="MsgHeader.OrigSender" to="extendMap.origSender"></mapping><!-- 报文发起人，14位 不足则后补空格 -->
	<mapping type="value-mapping" from="MsgHeader.OrigSenderSID" to="prodCatalogId"></mapping><!-- 发送系统号  BEPS-->
	<!-- 为适应于平台990回执报文，在extendMap中添加字段origSenderSID -->
	<mapping type="value-mapping" from="MsgHeader.OrigSenderSID" to="extendMap.origSenderSID"></mapping>

	<mapping type="value-mapping" from="MsgHeader.OrigReceiver" to="extendMap.origReceiver"></mapping><!-- 报文接收人 -->
	<mapping type="value-mapping" from="MsgHeader.OrigReceiverSID" to="extendMap.origReceiverSID"></mapping><!-- 接收系统号 BEPS-->
	<mapping type="value-mapping" from="MsgHeader.OrigSendDate" to="extendMap.origSendDate" ></mapping><!-- 报文发起日期20100501 -->
	<mapping type="value-mapping" from="MsgHeader.OrigSendTime" to="extendMap.origSendTime"></mapping><!-- 报文发起时间094508-->
	<mapping type="value-mapping" from="MsgHeader.StructType" to="extendMap.structType"></mapping><!-- 报文格式 -->
	<mapping type="value-mapping" from="MsgHeader.MesgType" to="contentMimeTypeId"></mapping><!-- 报文类型代码beps.008.001.01-->
	<mapping type="value-mapping" from="MsgHeader.MesgID" to="extendMap.mesgID" ></mapping><!-- 通信级标志号 -->
	<mapping type="value-mapping" from="MsgHeader.MesgRefID" to="extendMap.mesgRefID" ></mapping><!-- 通信级参考号00000000000000000000 -->
  	<mapping type="value-mapping" from="MsgHeader.MesgPriority" to="extendMap.mesgPriority"></mapping><!-- 报文优先级-->
	<mapping type="value-mapping" from="MsgHeader.MesgDirection" to="extendMap.mesgDirection"></mapping><!--报文传输方向 -->
    <mapping type="value-mapping" from="MsgHeader.Reserve" to="extendMap.reserve"></mapping><!--保留域-->
	<mapping type="value-mapping" from="MsgHeader.EndFlag" to="extendMap.endFlag"></mapping><!-- 结束标识 -->
    <!-- 报文头 end-->

	<!-- 报文体内容 -->
	<!-- 业务头 -->
	<mapping type="value-mapping" from="BEPS_726_Out.GrpHdr.MessageIdentification" to="subject" /><!--报文标识号  -->
	<mapping type="value-mapping" from="BEPS_726_Out.GrpHdr.CreationDateTime" to="extendMap.creationDateTime"/><!-- 报文发送时间 -->
	<mapping type="value-mapping" from="BEPS_726_Out.GrpHdr.InstructingDirectParty" to="extendMap.instructingDirectParty"/><!-- 发起直接参与机构-->
	<mapping type="value-mapping" from="BEPS_726_Out.GrpHdr.InstructingParty" to="partyIdFrom"/><!-- 发起参与机构  -->
	<mapping type="value-mapping" from="BEPS_726_Out.GrpHdr.InstructedDirectParty" to="extendMap.instructedDirectParty"/><!-- 接收直接参与机构  -->
	<mapping type="value-mapping" from="BEPS_726_Out.GrpHdr.InstructedParty" to="InstructedParty"/><!-- 接收参与机构  -->
	<mapping type="value-mapping" from="BEPS_726_Out.GrpHdr.SystemCode" to="extendMap.systemCode"/><!-- 系统编号 -->
	<mapping type="value-mapping" from="BEPS_726_Out.GrpHdr.Remark" to="extendMap.remark"/><!-- 备注 -->
	<!-- end -->

	<mapping type="value-mapping" from="BEPS_726_Out.CheckDate" to="extendMap.checkDate"></mapping><!-- 对账日期 -->
	<mapping type="value-mapping" from="BEPS_726_Out.NumberOfCheckInformation1" to="extendMap.NumberOfCheckInformation1"></mapping><!-- 业务包对账信息数目 -->
	<mapping type="value-mapping" from="BEPS_726_Out.NumberOfCheckInformation2" to="extendMap.NumberOfCheckInformation2"></mapping><!-- 信息报文对账信息数目 -->

	<!-- 当为人行主动下发时，对账清算行字段必输 -->
	<mapping type="value-mapping" from="BEPS_726_Out.GrpHdr.InstructedParty" to="extendMap.checkInstgPty"/><!-- 接收参与机构  -->

	<mapping type="value" to="productId">ACCTCHCK_BEPS_PRE</mapping>
	<mapping type="value" to="communicationEventTypeId">MESSAGE_IN_COMM</mapping>
	<mapping type="value" to="extendMap.requestOrResponse">response</mapping>
	<mapping type="value" to="serviceId">processCommunicationEvent</mapping>

			<manual-mapping> <![CDATA[

			import com.giantstone.security.TccrbSignature;   //包名
			import com.giantstone.tcrcb.util.CommUtils;
			import com.giantstone.cnaps2.messagebean.recv.req.*;
			import java.util.List;
			import java.util.ArrayList;
			import java.util.HashMap;
			import java.lang.Long;
			import java.math.BigDecimal;

			
			Map extendMap = target.get("extendMap");
			extendMap.put("dataTypeId","DT2004");

			List AcctChckSum = new ArrayList();

			String  TotalNumber = sourceBean.BEPS_726_Out.Prttn.TotalNumber;
			String  startNb = sourceBean.BEPS_726_Out.Prttn.StartNumber;
			String  endNb = sourceBean.BEPS_726_Out.Prttn.EndNumber;
			if(TotalNumber==null||TotalNumber.length()==0){
				TotalNumber = "0";
			}
			if(startNb==null||startNb.length()==0){
				startNb = "0";
			}
			if(endNb==null||endNb.length()==0){
				endNb = "0";
			}
			
			int start = Integer.parseInt(startNb);
			int end = Integer.parseInt(endNb);
			int pageNb = end - start + 1 ;
			if(start==0&&end==0){
				pageNb = 0;
			}
			Long prttnTtlNb = Long.valueOf(TotalNumber);
			Long prttnRcvNb = Long.valueOf(String.valueOf(pageNb));
			extendMap.put("prttnTtlNb",prttnTtlNb);
			extendMap.put("prttnRcvNb",prttnRcvNb);
			Long tempZero = new Long(0);

			List beps = sourceBean.BEPS_726_Out.ccti;
		  for(BEPS_726_OutCcti map : beps){
			String mT = map.TransactionTypeCode; // 报文编号
			String SendTotalCount = map.SendTotalCount;
			String SendTotalAmount = map.SendTotalAmount;
			String ReceiveTotalCount = map.ReceiveTotalCount;
			String ReceiveTotalAmount = map.ReceiveTotalAmount;
			Map sumSend = new HashMap();
				sumSend.put("mT", mT); 
				sumSend.put("sndRcvTp", "SR00");
				sumSend.put("ccy",SendTotalAmount.substring(0,3));
				Long nb = Long.valueOf(SendTotalCount);
				sumSend.put("nb", nb);
				BigDecimal amt = new BigDecimal(SendTotalAmount.substring(3));
				sumSend.put("amt", amt);
				sumSend.put("sumTypeId","ST2003");
				sumSend.put("dimTypeId","DIMT204");

			List AcctChckDetailsSend = new ArrayList();
			List beps1 = map.ccti_01;
			for(BEPS_726_OutCctiCcti_01 map2 : beps1){
				String OriginalMessageIdentification = map2.OrgnlGrpHdr.OriginalMessageIdentification;
				String OriginalInstructingParty = map2.OrgnlGrpHdr.OriginalInstructingParty;
				String OriginalMessageType = map2.OrgnlGrpHdr.OriginalMessageType;
				String TotalCount = map2.TotalCount;
				String CurrencyType = map2.CurrencyType;
				String ControlSum = map2.ControlSum;
				String ProcessStatus = map2.ProcessStatus;
				Map temp = new HashMap();
						temp.put("transId",OriginalMessageIdentification+":"+OriginalInstructingParty+":"+OriginalMessageType);
						BigDecimal amt1 = new BigDecimal(ControlSum);
						temp.put("amt",amt1);
						temp.put("ccy",CurrencyType);
						temp.put("prcSts",ProcessStatus);
						Long nb1 = Long.valueOf(TotalCount);
						temp.put("nb",nb1);
						temp.put("detailsTypeId","DTLT2001");
						AcctChckDetailsSend.add(temp);

				}
				sumSend.put("AcctChckDetails",AcctChckDetailsSend);
				if(nb.compareTo(tempZero)>0){
					AcctChckSum.add(sumSend);
				}

			Map sumReceive = new HashMap();
				sumReceive.put("mT", mT); // 报文编号
				sumReceive.put("sndRcvTp", "SR01");
				sumReceive.put("ccy",ReceiveTotalAmount.substring(0,3));
				Long nb2 = Long.valueOf(ReceiveTotalCount);
				sumReceive.put("nb", nb2);
				BigDecimal amt2 = new BigDecimal(ReceiveTotalAmount.substring(3));
				sumReceive.put("amt", amt2);
				sumReceive.put("sumTypeId","ST2003");
				sumReceive.put("dimTypeId","DIMT204");
			List AcctChckDetailsRCV = new ArrayList();
			List beps2 = map.ccti_02;
			for(BEPS_726_OutCctiCcti_02 map3 : beps2){
				String OriginalMessageIdentification2 = map3.OrgnlGrpHdr2.OriginalMessageIdentification;
				String OriginalInstructingParty2 = map3.OrgnlGrpHdr2.OriginalInstructingParty;
				String OriginalMessageType2 = map3.OrgnlGrpHdr2.OriginalMessageType;
				String TotalCount2 = map3.TotalCount2;
				String CurrencyType2 = map3.CurrencyType2;
				String ControlSum2 = map3.ControlSum2;
				String ProcessStatus2 = map3.ProcessStatus2;
				Map temp = new HashMap();
					temp.put("transId",OriginalMessageIdentification2+":"+OriginalInstructingParty2+":"+OriginalMessageType2);
					BigDecimal amt3 = new BigDecimal(ControlSum2);
					temp.put("amt",amt3);
					temp.put("ccy",CurrencyType2);
					temp.put("prcSts",ProcessStatus2);
					Long nb3 = Long.valueOf(TotalCount2);
					temp.put("nb",nb3);
					temp.put("detailsTypeId","DTLT2001");
					AcctChckDetailsRCV.add(temp);
			}
			sumReceive.put("AcctChckDetails",AcctChckDetailsRCV);
			if(nb2.compareTo(tempZero)>0){
			AcctChckSum.add(sumReceive);
			}
			}


		List beps3 = sourceBean.BEPS_726_Out.ccti2;
		for(BEPS_726_OutCcti2 map : beps3){
			String mT2 = map.TransactionTypeCode2; // 报文类型
			String SendTotalCount2 = map.SendTotalCount2;
			String ReceiveTotalCount2 = map.ReceiveTotalCount2;
			Map sumSend = new HashMap();
				sumSend.put("mT", mT2);
				sumSend.put("sndRcvTp", "SR00");
				Long nb4 = Long.valueOf(SendTotalCount2);
				sumSend.put("nb", nb4);
				sumSend.put("sumTypeId","ST2004");
				sumSend.put("dimTypeId","DIMT203");

			List AcctChckDetailsSend = new ArrayList();
			List beps4 = map.ccti2_01;
			for(BEPS_726_OutCcti2Ccti2_01 map2 : beps4){
				String OriginalMessageIdentification3 = map2.OrgnlGrpHdr3.OriginalMessageIdentification;
				String OriginalInstructingParty3 = map2.OrgnlGrpHdr3.OriginalInstructingParty;
				String OriginalMessageType3 = map2.OrgnlGrpHdr3.OriginalMessageType;
				String ProcessStatus3 = map2.ProcessStatus3;
				Map temp = new HashMap();
					temp.put("transId",OriginalMessageIdentification3+":"+OriginalInstructingParty3+":"+OriginalMessageType3);
					temp.put("prcSts",ProcessStatus3);
					temp.put("detailsTypeId","DTLT2002");
					AcctChckDetailsSend.add(temp);
				}
				sumSend.put("AcctChckDetails",AcctChckDetailsSend);
				if(nb4.compareTo(tempZero)>0){
				AcctChckSum.add(sumSend);
				}
				
			
			Map sumReceive = new HashMap();
				sumReceive.put("mT", mT2);
				sumReceive.put("sndRcvTp", "SR01");
				Long nb5 = Long.valueOf(ReceiveTotalCount2);
				sumReceive.put("nb", nb5);
				sumReceive.put("sumTypeId","ST2004");
				sumReceive.put("dimTypeId","DIMT203");
			List AcctChckDetailsRCV = new ArrayList();
			List beps5 = map.ccti2_02;
			for(BEPS_726_OutCcti2Ccti2_02 map3 : beps5){
				String OriginalMessageIdentification4 = map3.OrgnlGrpHdr4.OriginalMessageIdentification;
				String OriginalInstructingParty4 = map3.OrgnlGrpHdr4.OriginalInstructingParty;
				String OriginalMessageType4 = map3.OrgnlGrpHdr4.OriginalMessageType;
				String ProcessStatus4 = map3.ProcessStatus4;
				Map temp = new HashMap();
					temp.put("transId",OriginalMessageIdentification4+":"+OriginalInstructingParty4+":"+OriginalMessageType4);
					temp.put("prcSts",ProcessStatus4);
					temp.put("detailsTypeId","DTLT2002");
					AcctChckDetailsRCV.add(temp);
				}
			sumReceive.put("AcctChckDetails",AcctChckDetailsRCV);
			if(nb5.compareTo(tempZero)>0){
			AcctChckSum.add(sumReceive);
			}
		}

			extendMap.put("AcctChckSum",AcctChckSum);

	]]> </manual-mapping>
</message-bean-mapping>
