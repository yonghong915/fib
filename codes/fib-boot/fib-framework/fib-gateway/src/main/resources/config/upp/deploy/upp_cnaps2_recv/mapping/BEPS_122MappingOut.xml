<?xml version="1.0" encoding="UTF-8"?>
<message-bean-mapping id="BEPS_122MappingOut" source-type="map" target-type="message-bean" target-bean-class="com.giantstone.cnaps2.messagebean.send.req.BEPS_122_bean">

	<!-- 报文头 -->
	<mapping type="value" to="MsgHeader.VersionID">02</mapping><!--版本 -->
	<mapping type="value-mapping" from="OrigSender" to="MsgHeader.OrigSender"></mapping><!--报文发起人 -->
	<mapping type="value-mapping" from="OrigSenderSID" to="MsgHeader.OrigSenderSID"></mapping><!--发送系统号 -->
	<mapping type="value-mapping" from="OrigReceiver" to="MsgHeader.OrigReceiver"></mapping><!--报文接收人 -->
	<mapping type="value-mapping" from="OrigReceiverSID" to="MsgHeader.OrigReceiverSID"></mapping><!--接收系统号 -->
	<mapping type="script" to="MsgHeader.OrigSendDate">
	<![CDATA[
	 	 import java.util.Date;
	   	 import java.text.SimpleDateFormat;
	   	 String date =  new SimpleDateFormat("yyyyMMdd").format(new Date());
		 return date;
		]]>

	</mapping><!--报文发起日期 -->
	<mapping type="script" to="MsgHeader.OrigSendTime"><![CDATA[
	 	 import java.util.Date;
	   	 import java.text.SimpleDateFormat;
	   	 String date =  new SimpleDateFormat("HHmmss").format(new Date());
		 return date;
		]]>
  	</mapping><!--报文发起时间-->
	<mapping type="value" to="MsgHeader.StructType">XML</mapping><!-- 格式类型 -->
	<mapping type="value" to="MsgHeader.MesgType">beps.122.001.01</mapping><!-- 报文类型代码 -->
	<mapping type="value-mapping" from="MesgID" to="MsgHeader.MesgID"></mapping><!-- 通信级标识号 -->
	<mapping type="value-mapping" from="MesgRefID" to="MsgHeader.MesgRefID"></mapping>
	<mapping type="value-mapping" from="MesgPriority" to="MsgHeader.MesgPriority"></mapping>
	<mapping type="value" to="MsgHeader.MesgDirection">U</mapping>
	<!-- mapping type="value-mapping" from="Reserve" to="MsgHeader.Reserve"></mapping>保留域 用空格填充 9位-->

	<!-- 报文体内容 -->
	<!-- 批量报文组头 -->
	<mapping type="value-mapping" from="MessageIdentification" to="BEPS_122_Out.PKGGrpHdr.MessageIdentification"/><!-- 报文标识号 -->
	<mapping type="script" to="BEPS_122_Out.PKGGrpHdr.CreationDateTime">
  		<![CDATA[
	 	 import java.util.Date;
	   	 import java.text.SimpleDateFormat;
	   	 String date =  new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss").format(new Date());
		 return date;
		]]>
	</mapping><!-- 报文发送时间，需要自己写脚本new出个时间 -->
	<mapping type="value-mapping" from="InstructingDirectParty" to="BEPS_122_Out.PKGGrpHdr.InstructingDirectParty"/><!-- 发起直接参与机构 -->
	<mapping type="value-mapping" from="InstructedDirectParty" to="BEPS_122_Out.PKGGrpHdr.InstructedDirectParty"/><!-- 接收直接参与机构 -->
	<mapping type="value-mapping" from="numberOfTransactions" to="BEPS_122_Out.PKGGrpHdr.NumberOfTransactions"/><!-- 明细业务总笔数 -->
	 <mapping type="value-mapping" from="currencyUom" to="BEPS_122_Out.PKGGrpHdr.CurrencyType"/>  <!--币种 -->
	<mapping type="value-mapping" from="ControlSum" to="BEPS_122_Out.PKGGrpHdr.ControlSum"/><!-- 明细业务总金额 -->
	<mapping type="value" to="BEPS_122_Out.PKGGrpHdr.SystemCode">BEPS</mapping>
	<mapping type="value-mapping" from="Remark" to="BEPS_122_Out.PKGGrpHdr.Remark"/><!-- 备注postscript？？ -->
	<!-- NPC信息组件，这个由NPC填写，非必输的组件 -->
	<mapping type="value-mapping" from="ProcessStatus" to="BEPS_122_Out.NPCPrcInf.ProcessStatus"/>
	<mapping type="value-mapping" from="ProcessCode" to="BEPS_122_Out.NPCPrcInf.ProcessCode"/><!-- 处理码 -->
	<mapping type="value-mapping" from="RejectInformation" to="BEPS_122_Out.NPCPrcInf.RejectInformation"/><!-- 拒绝信息 -->
	<mapping type="value-mapping" from="NettingDate" to="BEPS_122_Out.NPCPrcInf.NettingDate"/><!-- 轧差日期 -->
	<mapping type="value-mapping" from="NettingRound" to="BEPS_122_Out.NPCPrcInf.NettingRound"/><!-- 轧差场次 -->
	<mapping type="value-mapping" from="SettlementDate" to="BEPS_122_Out.NPCPrcInf.SettlementDate"/><!-- 清算日期 -->
	<mapping type="value-mapping" from="ReceiveTime" to="BEPS_122_Out.NPCPrcInf.ReceiveTime"/>
	<mapping type="value-mapping" from="TransmitTime" to="BEPS_122_Out.NPCPrcInf.TransmitTime"/>


	<!-- 报文正文其他信息 -->

	<mapping type="value-mapping" from="table_01[].transactionIdentification" to="BEPS_122_Out.ccti[].TransactionIdentification"/><!-- 明细标识号 -->
	<mapping type="value-mapping" from="table_01[].paymentMethodInfo.accountName" to="BEPS_122_Out.ccti[].Name"/><!-- 付款人名称 -->
	<mapping type="value-mapping" from="table_01[].placingCustomer.address" to="BEPS_122_Out.ccti[].AddressLine"/><!-- 付款人地址 -->
	<mapping type="value-mapping" from="table_01[].paymentMethodInfo.accountNumber" to="BEPS_122_Out.ccti[].Identification"/><!-- 付款人账号 -->
	<mapping type="value-mapping" from="table_01[].paymentMethodInfo.acctBankCode" to="BEPS_122_Out.ccti[].Issuer"/><!-- 付款人开户行行号 -->
	<mapping type="value-mapping" from="table_01[].paymentMethodInfo.bankCode" to="BEPS_122_Out.ccti[].Identification2"/><!-- 付款行行号 -->
	<mapping type="value-mapping" from="table_01[].disbursement.bankCode" to="BEPS_122_Out.ccti[].Identification3"/><!-- 收款行行号 -->

	<mapping type="value-mapping" from="table_01[].disbursement.accountName" to="BEPS_122_Out.ccti[].Name2"/><!-- 收款人名称-->
	<mapping type="value-mapping" from="table_01[].endUserCustomer.address" to="BEPS_122_Out.ccti[].AddressLine2"/><!-- 收款人地址 -->
	<mapping type="value-mapping" from="table_01[].disbursement.accountNumber" to="BEPS_122_Out.ccti[].Identification4"/><!-- 收款人账号 -->
	<mapping type="value-mapping" from="table_01[].disbursement.acctBankCode" to="BEPS_122_Out.ccti[].Issuer2"/><!-- 收款人开户行行号 -->
	<mapping type="value-mapping" from="table_01[].currencyUom" to="BEPS_122_Out.ccti[].CurrencyType"/>  <!--币种 -->
	<mapping type="value-mapping" from="table_01[].grandTotal" to="BEPS_122_Out.ccti[].Amount"/>
	<mapping type="value-mapping" from="table_01[].operationCategory" to="BEPS_122_Out.ccti[].Proprietary"/><!-- 业务类型编码 -->
	<mapping type="value-mapping" from="table_01[].businessType" to="BEPS_122_Out.ccti[].Proprietary2"/><!-- 业务种类编码 -->

 	<mapping type="value-mapping" from="table_01[].internalNote" to="BEPS_122_Out.ccti[].AdditionalInformation"/> <!--附言summary？？ -->

	<manual-mapping>
	<![CDATA[
		import java.util.Map;
		import java.util.ArrayList;
		import java.util.List;
		import java.util.HashMap;
		import com.giantstone.util.AmountUtil;
		import java.util.Date;
	   	import java.text.SimpleDateFormat;
		import com.giantstone.cnaps2.messagebean.send.req.BEPS_ServiceElement122_A104;
		import com.giantstone.cnaps2.messagebean.send.req.BEPS_ServiceElement122_A105;
		import com.giantstone.cnaps2.messagebean.send.req.BEPS_ServiceElement122_A307;
		import com.giantstone.cnaps2.messagebean.send.req.FslInf;
		import com.giantstone.cnaps2.messagebean.send.req.BEPS_122_Out;
		import com.giantstone.cnaps2.messagebean.send.req.BEPS_ServiceElement122_A104NationalTreasuryCreditInformationDetails;
		import com.giantstone.cnaps2.messagebean.send.req.BEPS_ServiceElement122_A307NationalTreasuryInformationDetails;
		import com.giantstone.cnaps2.messagebean.send.req.OrgnlGrpHdr;
		import com.giantstone.cnaps2.messagebean.send.req.OrgnlTx;
		import com.giantstone.common.util.CodeUtil;
		List tables = (List) sourceMap.get("table_01");
		String currencyUom = (String)sourceMap.get("currencyUom");
		print("currencyUom*****************"+currencyUom);
		for(int i=0;i<tables.size();i++){
			String flag = tables.get(i).get("operationCategory");
			Map answers = (Map)((Map)((List)((Map)tables.get(i)).get("products")).get(0)).get("answers");
			// 附言，将前台传入的备注赋值给报文中的附言
			String remark = (String)answers.get("remark");
			if(remark != null && remark != ""){
				target.getBEPS_122_Out().getCctiAt(i).setAdditionalInformation(remark);
			}
			

			if("A104".equals(flag)){
			    //国库资金贷记划拨
				BEPS_ServiceElement122_A104  se = new BEPS_ServiceElement122_A104();
				FslInf fif = new FslInf();
				fif.setFlowNumber((String)answers.get("flowNumber"));
				fif.setCurrencyType(currencyUom);
				fif.setAmount((String)answers.get("amount"));
				fif.setReportCode((String)answers.get("reportCode"));
				fif.setReceiveCode((String)answers.get("receiveCode"));
				fif.setReportNumber((String)answers.get("reportNumber"));

				String reportForms = (String)answers.get("reportForms");
				print("reportForms*********"+reportForms);
				if((reportForms!=null)&&(!"".equals(reportForms)))
				{
					//对日期进行处理
					Date reportFormsPlat=new SimpleDateFormat("yyyyMMdd").parse(reportForms);
					String date =  new SimpleDateFormat("yyyy-MM-dd").format(reportFormsPlat);
					fif.setReportForms(date);
				}else
				{
					//对日期进行处理
					fif.setReportForms(reportForms);
				}

				se.setFslInf(fif);
				se.setBudgetLevel((String)answers.get("budgetLevel"));
				se.setIndicator((String)answers.get("indicator"));
				se.setBudgetType((String)answers.get("budgetType"));
				se.setNumberOfTransactions((String)answers.get("numberOfTransactions"));
				List nationalTreasuryCreditInformationDetails = (List)answers.get("PETODEnrolList1");
				if(nationalTreasuryCreditInformationDetails==null||nationalTreasuryCreditInformationDetails.size()==0){
					continue;
				}
				List ntcidList = new ArrayList();
				for(int j=0;j<nationalTreasuryCreditInformationDetails.size();j++) {
					Map map = (Map)nationalTreasuryCreditInformationDetails.get(j);
					BEPS_ServiceElement122_A104NationalTreasuryCreditInformationDetails det = new BEPS_ServiceElement122_A104NationalTreasuryCreditInformationDetails();
					det.setTypeCode((String)map.get("typeCode"));
					det.setSubjectCode((String)map.get("subjectCode"));
					det.setCurrencyType(sourceMap.get("currencyUom"));
					print("**************888888888888*************"+(String)map.get("amount"));
					det.setAmount((String)map.get("amount"));
					ntcidList.add(det);
				}
				se.setNationalTreasuryCreditInformationDetails(ntcidList);
				target.getBEPS_122_Out().getCctiAt(i).setCustomerCreditTransfer(se);
			} else if ("A105".equals(flag)){

				//退汇业务
				BEPS_ServiceElement122_A105  se = new BEPS_ServiceElement122_A105();
				OrgnlGrpHdr ogh = new OrgnlGrpHdr();
				ogh.setOriginalMessageIdentification((String)answers.get("originalMessageIdentification"));//原报文标识号
				ogh.setOriginalInstructingParty((String)answers.get("originalInstructingParty"));//原发起参与机构
				ogh.setOriginalMessageType((String)answers.get("originalMessageType"));//原报文类型

				OrgnlTx otx = new OrgnlTx();
				otx.setInstructingIndirectParty((String)answers.get("instructingIndirectParty"));//原发起间接参与机构
				otx.setInstructedIndirectParty((String)answers.get("instructedIndirectParty"));//原接收间接参与机构
				otx.setOriginalTransactionIdentification((String)answers.get("originalTransactionIdentification"));//原明细标识号
				otx.setOriginalTransactionTypeCode((String)answers.get("originalTransactionTypeCode"));//原业务类型编号

				se.setOrgnlGrpHdr(ogh);
				se.setOrgnlTx(otx);
				se.setContent((String)answers.get("content"));
				target.getBEPS_122_Out().getCctiAt(i).setCustomerCreditTransfer(se);

			} else if ("A307".equals(flag)){

				//国库资金国债兑付贷记划拨
				BEPS_ServiceElement122_A307  se = new BEPS_ServiceElement122_A307();
				FslInf fif = new FslInf();
				fif.setFlowNumber((String)answers.get("flowNumber"));
				fif.setCurrencyType(currencyUom);
				fif.setAmount((String)answers.get("amount"));
				fif.setReportCode((String)answers.get("reportCode"));
				fif.setReceiveCode((String)answers.get("receiveCode"));
				String reportForms = (String)answers.get("reportForms");
				if((reportForms!=null)&&(!"".equals(reportForms)))
				{
					//对日期进行处理
					Date reportFormsPlat=new SimpleDateFormat("yyyyMMdd").parse(reportForms);
					String date =  new SimpleDateFormat("yyyy-MM-dd").format(reportFormsPlat);
					fif.setReportForms(date);
				}else
				{
					//对日期进行处理
					fif.setReportForms(reportForms);
				}
				fif.setReportNumber((String)answers.get("reportNumber"));
				se.setNumberOfTransactions((String)answers.get("numberOfTransactions"));
				se.setFslInf(fif);
				List nationalTreasuryInformationDetails = (List)answers.get("nationalTreasuryInformationDetails");
				List targetList = new ArrayList();
				for(int j=0;j<nationalTreasuryInformationDetails.size();j++) {
					Map map = (Map)nationalTreasuryInformationDetails.get(j);
					BEPS_ServiceElement122_A307NationalTreasuryInformationDetails det = new BEPS_ServiceElement122_A307NationalTreasuryInformationDetails();
					det.setTypeCode((String)map.get("typeCode"));//兑付国债银行大类
					det.setCapitalCode((String)map.get("capitalCode"));//本金代码
					det.setCurrencyType((String)map.get("currencyType"));//本金币种
					det.setCapitalAmount((String)map.get("capitalAmount"));//本金金额
					det.setAccrualCode((String)map.get("accrualCode"));//利息代码
					det.setCurrencyType2((String)map.get("currencyType2"));//利息币种
					det.setAccrualAmount((String)map.get("accrualAmount"));//利息金额
					targetList.add(det);
				}
				se.setNationalTreasuryInformationDetails(targetList);
				target.getBEPS_122_Out().getCctiAt(i).setCustomerCreditTransfer(se);
			}
		}
	]]>
	</manual-mapping>

  </message-bean-mapping>